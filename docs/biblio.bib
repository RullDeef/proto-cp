@misc{rtp,
    series =    {Request for Comments},
    number =    3550,
    howpublished =  {RFC 3550},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3550},
    url =       {https://www.rfc-editor.org/info/rfc3550},
    author =    {Henning Schulzrinne and Stephen L. Casner and Ron Frederick and Van Jacobson},
    title =     {{RTP: A Transport Protocol for Real-Time Applications}},
    pagetotal = 104,
    year =      2003,
    month =     jul,
    abstract =  {This memorandum describes RTP, the real-time transport protocol. RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services. RTP does not address resource reservation and does not guarantee quality-of- service for real-time services. The data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality. RTP and RTCP are designed to be independent of the underlying transport and network layers. The protocol supports the use of RTP-level translators and mixers. Most of the text in this memorandum is identical to RFC 1889 which it obsoletes. There are no changes in the packet formats on the wire, only changes to the rules and algorithms governing how the protocol is used. The biggest change is an enhancement to the scalable timer algorithm for calculating when to send RTCP packets in order to minimize transmission in excess of the intended rate when many participants join a session simultaneously. {[}STANDARDS-TRACK{]}},
}

@misc{sip,
    series =    {Request for Comments},
    number =    3261,
    howpublished =  {RFC 3261},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3261},
    url =       {https://www.rfc-editor.org/info/rfc3261},
    author =    {Eve Schooler and Jonathan Rosenberg and Henning Schulzrinne and Alan Johnston and Gonzalo Camarillo and Jon Peterson and Robert Sparks and Mark J. Handley},
    title =     {{SIP: Session Initiation Protocol}},
    pagetotal = 269,
    year =      2002,
    month =     jul,
    abstract =  {This document describes Session Initiation Protocol (SIP), an application-layer control (signaling) protocol for creating, modifying, and terminating sessions with one or more participants. These sessions include Internet telephone calls, multimedia distribution, and multimedia conferences. {[}STANDARDS-TRACK{]}},
}

@misc{h323,
    series =    {Request for Comments},
    number =    4123,
    howpublished =  {RFC 4123},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC4123},
    url =       {https://www.rfc-editor.org/info/rfc4123},
    author =    {Charles Agboh and Henning Schulzrinne},
    title =     {{Session Initiation Protocol (SIP)-H.323 Interworking Requirements}},
    pagetotal = 16,
    year =      2005,
    month =     jul,
    abstract =  {This document describes the requirements for the logical entity known as the Session Initiation Protocol (SIP)-H.323 Interworking Function (SIP-H.323 IWF) that will allow the interworking between SIP and H.323. This memo provides information for the Internet community.},
}

@misc{nat-types,
    title = {Understand NAT to Enable Peer-To-Peer Communication on IOS and IOS XE Routers - Cisco --- \url{https://www.cisco.com/c/en/us/support/docs/ip/network-address-translation-nat/217599-understand-nat-to-enable-peer-to-peer-co.html} (дата обращения: 12.12.2024)},
    howpublished = {[Электронный ресурс]},
}

@misc{openssl,
    title = {OpenSSL --- \url{https://www.openssl.org/} (дата обращения: 10.12.2024)},
    howpublished = {[Электронный ресурс]},
}

@misc{aac,
    series =    {Request for Comments},
    number =    3016,
    howpublished =  {RFC 3016},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3016},
    url =       {https://www.rfc-editor.org/info/rfc3016},
    author =    {Yoshinori Matsui and Hideaki Kimata and Yoshihiro Kikuchi and Shigeru Fukunaga and Toshiyuki Nomura},
    title =     {{RTP Payload Format for MPEG-4 Audio/Visual Streams}},
    pagetotal = 21,
    year =      2000,
    month =     nov,
    abstract =  {This document describes Real-Time Transport Protocol (RTP) payload formats for carrying each of MPEG-4 Audio and MPEG-4 Visual bitstreams without using MPEG-4 Systems. {[}STANDARDS-TRACK{]}},
}

@misc{h264,
    title = {H.264: Advanced video coding for generic audiovisual services --- \url{https://www.itu.int/rec/T-REC-H.264} (дата обращения: 10.12.2024)},
    howpublished = {(Электронный ресурс)},
}

@misc{tls,
    series =    {Request for Comments},
    number =    8446,
    howpublished =  {RFC 8446},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC8446},
    url =       {https://www.rfc-editor.org/info/rfc8446},
    author =    {Eric Rescorla},
    title =     {{The Transport Layer Security (TLS) Protocol Version 1.3}},
    pagetotal = 160,
    year =      2018,
    month =     aug,
    abstract =  {This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery. This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.},
}

@misc{cmake,
    title = {CMake --- Upgrade Your Software Build System --- \url{https://cmake.org/} (дата обращения: 20.12.2024)},
    howpublished = {(Электронный ресурс)},
}

@misc{ffmpeg,
    title = {Ffmpeg --- \url{https://www.ffmpeg.org/} (дата обращения: 21.12.2024)},
    howpublished = {(Электронный ресурс)},
}

@misc{gtest,
    title = {GoogleTest User's Guide --- \url{https://google.github.io/googletest/} (дата обращения: 21.12.2024)},
    howpublished = {(Электронный ресурс)},
}
